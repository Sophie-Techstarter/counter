name: Dockerize, Deploy, and Provision AWS Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECS_TASK_DEFINITION: ./task-definition.json
  TF_WORKING_DIR: ./terraform  # Specify the directory for Terraform configurations

jobs:
  build_test_push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js for building the React app
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run tests
      - name: Run tests
        run: npm test

      # Build the React app
      - name: Build React app
        run: npm run build

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/counter:${{ github.sha }}

  provision_infrastructure:
    runs-on: ubuntu-latest
    needs: build_test_push  # Depends on the previous job
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6  # Adjust the version as needed

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Validate Terraform configuration
      - name: Validate Terraform
        run: terraform validate

      # Plan Terraform infrastructure changes
      - name: Terraform Plan
        run: terraform plan

      # Apply Terraform changes to provision AWS infrastructure
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve
